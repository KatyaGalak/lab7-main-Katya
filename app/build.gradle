/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id 'application'
    id 'java' // Добавляем явно для большей ясности
    id 'io.freefair.lombok' version '8.12'
}
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'org.openjdk.jmh:jmh-core:1.34'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    implementation 'org.apache.commons:commons-csv:1.9.0'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    implementation 'com.google.code.gson:gson:2.8.9'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.15.0'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.18.2'

    implementation 'commons-codec:commons-codec:1.15'

    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.0'
    
    implementation 'org.glassfish.jaxb:jaxb-xjc:4.0.0'
    
    implementation 'org.postgresql:postgresql:42.7.4'
}

// Apply a specific Java toolchain to ease working on different environments.
java { 
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'lab6.client.Client'
}

jar {
    enabled = false // Отключаем стандартную задачу jar
}


// Задача для сборки JAR клиента
tasks.register('clientJar', Jar) {
    archiveBaseName = 'ClientApp'
    manifest {
        attributes 'Main-Class': 'lab6.client.ClientMain'
    }
    from(sourceSets.main.output) {
        include 'lab6/client/**'
        include 'lab6/shared/**'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// Задача для сборки JAR сервера
tasks.register('serverJar', Jar) {
    archiveBaseName = 'ServerApp'
    manifest {
        attributes 'Main-Class': 'lab6.server.ServerMain'
    }
    from(sourceSets.main.output) {
        include 'lab6/server/**'
        include 'lab6/shared/**'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

run {
    standardInput = System.in
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.build {
    dependsOn 'clientJar'
    dependsOn 'serverJar'
}